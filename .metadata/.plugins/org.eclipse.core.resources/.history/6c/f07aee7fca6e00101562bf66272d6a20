package training.iqgateway.staff.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.mongodb.core.MongoTemplate;
import org.springframework.data.mongodb.core.query.Criteria;
import org.springframework.data.mongodb.core.query.Query;
import org.springframework.stereotype.Service;

import training.iqgateway.staff.entity.Nurse;
import training.iqgateway.staff.repository.NurseRepository;

@Service
public class NurseServiceImpl implements NurseService {
	
	@Autowired
	NurseRepository nurseRepository;
	

	@Autowired
	MongoTemplate mongoTemplate;

	@Override
	public Nurse getNurseById(String nurseId) {
		// TODO Auto-generated method stub
		return nurseRepository.findById(nurseId)
				.orElseThrow(() -> new RuntimeException("Nurse not found with id: " + nurseId));
	}

	@Override
	public Nurse updateNurse(Nurse nurse) {
		// TODO Auto-generated method stub
		return nurseRepository.save(nurse);
	}

	@Override
	public Nurse setNurseAvailability(String nurseId, boolean availbality) {
		// TODO Auto-generated method stub
		
		Nurse nurse = getNurseById(nurseId);
		nurse.setAvailableStatus(availbality);
		
		return updateNurse(nurse);
	}

	@Override
	public List<Nurse.WorkingHour> getWorkingHours(String nurseId) {
		
		// TODO Auto-generated method stub
		
		List<Nurse.WorkingHour> workingHours = null;
		
		nurseRepository.findAll().stream().filter(nurse -> nurse.get_id().equals(nurseId))
			.forEach(nurse -> workingHours.addAll(nurse.getWorkingHours()));
		
		
		
		return workingHours; 
	}

	@Override
	public List<Nurse.WorkSchedule> getWorkingSchedule(String nurseId) {
		// TODO Auto-generated method stub
		
		
		List<Nurse.WorkSchedule> workSchedules = null;
		
		nurseRepository.findAll().stream().filter(nurse -> nurse.get_id().equals(nurseId))
			.forEach(nurse -> workSchedules.addAll(nurse.getWorkSchedule()));
		System.out.println(workSchedules+"sfjsdkfjk");
		return workSchedules;
	}

	@Override
	public Nurse getNurseByEmail(String email) {
		
		Query query = new Query();
		query.addCriteria(Criteria.where("contactDetails.email").is(email));
		// TODO Auto-generated method stub
		
		return mongoTemplate.findOne(query, Nurse.class);
	
	}

}
