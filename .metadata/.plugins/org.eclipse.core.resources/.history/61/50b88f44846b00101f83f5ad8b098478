package training.iqgateway.staff.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import training.iqgateway.staff.entity.Nurse;
import training.iqgateway.staff.service.NurseService;

@RestController
@RequestMapping("/api/nurse")
@CrossOrigin(origins = "*")
public class NurseController {

	@Autowired
	NurseService nurseService;

	@GetMapping("/{nurseId}")
	public ResponseEntity<?> getNurseDetails(@PathVariable String nurseId) {
		// Logic to fetch nurse details by ID

		// Placeholder for actual nurse retrieval logic

		Nurse nurse = null;

		try {
			nurse = nurseService.getNurseById(nurseId);
		} catch (Exception e) {
			return new ResponseEntity<>("Nurse not found with id: " + nurseId, HttpStatus.NOT_FOUND);
		}

		return new ResponseEntity<>(nurse, HttpStatus.OK);
	}

	@PutMapping("updateNurse/")
	public ResponseEntity<?> updateNurseDetails(Nurse nurse) {
		// Logic to update nurse details

		// Placeholder for actual nurse update logic
		Nurse updatedNurse = null;
		try {
			updatedNurse = nurseService.updateNurse(nurse);
		} catch (Exception e) {
			return new ResponseEntity<>("Error updating nurse details: " + e.getMessage(),
					HttpStatus.INTERNAL_SERVER_ERROR);
		}

		return new ResponseEntity<>(updatedNurse, HttpStatus.OK);
	}
	
	
	@PutMapping("/setAvailability/{nurseId}/{availbality}")
	public ResponseEntity<?> setNurseAvailability(@PathVariable String nurseId,@PathVariable boolean availbality) {
		// Logic to set nurse availability

		// Placeholder for actual availability setting logic
		
		Nurse nurse = null;
		
		try {
			nurse = nurseService.setNurseAvailability(nurseId,availbality);
		} catch (Exception e) {
			return new ResponseEntity<>("Error setting nurse availability: " + e.getMessage(),
					HttpStatus.INTERNAL_SERVER_ERROR);
		}

		return new ResponseEntity<>(nurse, HttpStatus.OK);
	}
	
}
